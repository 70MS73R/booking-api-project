// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = "file:../prisma/dev.db"
  relationMode = "prisma"
}

model User {
  id              String    @id @unique
  username        String    @unique
  password        String
  name            String
  email           String
  phoneNumber     String
  profilePicture  String
  reviews         Review[]
  bookings        Booking[]
}

model Booking {
  id             String   @id @unique
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         String   
  propertyId     String
  property       Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Int
  bookingStatus  String

  @@index([userId])
  @@index([propertyId])
}

model Property {
  id            String    @id @unique
  host          Host      @relation(fields: [hostId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hostId        String    
  title         String
  description   String
  location      String
  pricePerNight Float
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  rating        Int
  amenities     Amenity[]
  reviews       Review[]
  bookings      Booking[]
  @@index([hostId])
}

model Review {
  id         String @id @unique
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     String 
  propertyId String 
  rating     Int
  comment    String

  @@index([userId])
  @@index([propertyId])
}

model Host {
  id              String     @id @default(dbgenerated())
  username        String     @unique  
  password        String
  name            String
  email           String
  phoneNumber     String
  profilePicture  String
  aboutMe         String
  listings        Property[]
}

model Amenity {
  id         String    @id @unique
  name       String
  Property   Property? @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  propertyId String?

  @@index([propertyId])
}
